// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChainResolveService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ChainResolveService.proto</summary>
public static partial class ChainResolveServiceReflection {

  #region Descriptor
  /// <summary>File descriptor for ChainResolveService.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ChainResolveServiceReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChlDaGFpblJlc29sdmVTZXJ2aWNlLnByb3RvGhFQcm90b01vZGVscy5wcm90",
          "byIWChRHZXRCbG9ja0NoYWluUmVxdWVzdCI1ChJHZXRCbG9ja0NoYWluUmVw",
          "bHkSHwoKQmxvY2tjaGFpbhgBIAMoCzILLlByb3RvQmxvY2syTQoMQ2hhaW5S",
          "ZXNvbHZlEj0KDUdldEJsb2NrY2hhaW4SFS5HZXRCbG9ja0NoYWluUmVxdWVz",
          "dBoTLkdldEJsb2NrQ2hhaW5SZXBseSIAUABiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ProtoModelsReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GetBlockChainRequest), global::GetBlockChainRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetBlockChainReply), global::GetBlockChainReply.Parser, new[]{ "Blockchain" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GetBlockChainRequest : pb::IMessage<GetBlockChainRequest> {
  private static readonly pb::MessageParser<GetBlockChainRequest> _parser = new pb::MessageParser<GetBlockChainRequest>(() => new GetBlockChainRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetBlockChainRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChainResolveServiceReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBlockChainRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBlockChainRequest(GetBlockChainRequest other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBlockChainRequest Clone() {
    return new GetBlockChainRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetBlockChainRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetBlockChainRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetBlockChainRequest other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class GetBlockChainReply : pb::IMessage<GetBlockChainReply> {
  private static readonly pb::MessageParser<GetBlockChainReply> _parser = new pb::MessageParser<GetBlockChainReply>(() => new GetBlockChainReply());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetBlockChainReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChainResolveServiceReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBlockChainReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBlockChainReply(GetBlockChainReply other) : this() {
    blockchain_ = other.blockchain_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBlockChainReply Clone() {
    return new GetBlockChainReply(this);
  }

  /// <summary>Field number for the "Blockchain" field.</summary>
  public const int BlockchainFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ProtoBlock> _repeated_blockchain_codec
      = pb::FieldCodec.ForMessage(10, global::ProtoBlock.Parser);
  private readonly pbc::RepeatedField<global::ProtoBlock> blockchain_ = new pbc::RepeatedField<global::ProtoBlock>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ProtoBlock> Blockchain {
    get { return blockchain_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetBlockChainReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetBlockChainReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!blockchain_.Equals(other.blockchain_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= blockchain_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    blockchain_.WriteTo(output, _repeated_blockchain_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += blockchain_.CalculateSize(_repeated_blockchain_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetBlockChainReply other) {
    if (other == null) {
      return;
    }
    blockchain_.Add(other.blockchain_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          blockchain_.AddEntriesFrom(input, _repeated_blockchain_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
